@inject Edurem.Services.IGroupService GroupService;
@inject Edurem.Services.IFileService FileService;
@inject Edurem.Services.IPostService PostService;

@if (Posts.Count == 0)
{
    <div class="row justify-content-center mt-4">
        <h3 class="text-muted text-center mt-4">Нет записей</h3>
    </div>
}
else
{
    @foreach (var post in Posts)
    {
        <div class="row justify-content-center mb-4">
            <div class="col-12">
                <div class="card border-dark">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-8">
                                <h4 class="font-weight-bold">
                                    <a href="@($"post/{post.Post.Id}")">@($"{post.Post.Title} ") </a>
                                    @if (post.Post.HasTests)
                                    {
                                        <a href="@($"post/{post.Post.Id}/test?userId={UserId}")"><i class="fas fa-laptop-code" style="color:green"></i></a>
                                    }
                                </h4>
                            </div>
                            @if (post.Post.AuthorId == UserId)
                            {
                                <div class="col-4 text-right">
                                    <a class="nav-link" style="font-size: 20px" href="#" id="navbarDropdownMenuLink" data-toggle="dropdown">
                                        <i class="fas fa-ellipsis-h" style="font-size: 18px; color: black"></i>
                                    </a>
                                    <div class="dropdown-menu  dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink">
                                        <a class="dropdown-item" href="@($"post/{post.Post.Id}/edit?groupId={GroupId}")" >Изменить</a>
                                        <div class="dropdown-divider">
                                        </div>
                                        <a class="dropdown-item text-danger" data-toggle="modal" data-target="#deletePostModal" style="cursor: pointer" @onclick="e => ChosenPost = post.Post">Удалить</a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="row">
                            @foreach (var file in post.Files)
                            {
                                <div class="col-3">
                                    <div class="card">
                                        <div class="card-body" style="padding-top: 5px">
                                            <div class="row mt-2 justify-content-center">
                                                <i style="font-size:30px" class="@FileService.GetExtensionClass(file.Name.Split(".").Last())"></i>
                                            </div>
                                        </div>
                                        <div class="card-footer text-center bg-white">
                                            <div class="row justify-content-center">
                                                <p style="font-size: 10px" class="mb-0">
                                                    <b><a href="/files/download?fileId=@file.Id">@file.Name</a></b>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="row">
        <MatButtonLink Class="w-100" OnClick="AddPosts">Ранние записи</MatButtonLink>
    </div>
}

<div class="modal fade" id="deletePostModal" tabindex="-1" role="dialog" aria-labelledby="deletePostModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle" style="font-weight: bold">Удалить пост</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p style="font-size: 18px" class="text-center">Вы действительно хотите удалить пост "@(ChosenPost.Title)"?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" @onclick="e => DeletePost(ChosenPost.Id)" data-dismiss="modal">Удалить</button>
                <button type="button" class="btn btn-secondary">Назад</button>
            </div>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public int GroupId { get; set; }

    [Parameter]
    public int UserId { get; set; }

    PostModel ChosenPost { get; set; }

    public List<(PostModel Post, List<FileModel> Files)> Posts { get; set; }

    protected override void OnInitialized()
    {
        Posts = new();
        Task.WaitAll(AddPosts());

        ChosenPost = new PostModel
        {
            Title = string.Empty
        };
    }

    async Task GetPosts()
    {
        Posts = new();
        foreach (var post in await GroupService.GetGroupPosts(GroupId, startIndex: 0, postsCount: 3))
        {
            var files = post.AttachedFiles.Select(af => FileService.GetFile(af.FileId).Result).ToList();

            Posts.Add((post, files));
        }
    }

    async Task AddPosts()
    {
        foreach (var post in await GroupService.GetGroupPosts(GroupId, startIndex: Posts.Count, postsCount: 3))
        {
            var files = post.AttachedFiles.Select(af => FileService.GetFile(af.FileId).Result).ToList();
            Posts.Add((post, files));
        }
    }

    async Task DeletePost(int postId)
    {
        await PostService.DeletePost(postId);

        await GetPosts();
    }
}
